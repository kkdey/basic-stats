celltime_levels <- 100;
out <- cell_ordering_class(cycle_data, celltime_levels = 100, num_iter=100)
library(parallel)
out <- cell_ordering_class(cycle_data, celltime_levels = 100, num_iter=100)
plot(amp_genes, out$amp, col="red",xlab="true amplitudes", ylab="est amplitudes", main="amplitudes est, comparison")
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
plot(phi_genes, out$phi, col="red",xlab="true phi", ylab="est phi", main="phase est, comparison");
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_sim)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_sim),radial.pos=sort(cell_times_sim),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_sim)), lwd=2)
library(devtools)
install_github('kkdey/cellcycleR')
library(cellcycleR)
G <- 500;
num_cells <- 400;
amp_genes <- rep(10, G);
phi_genes <- runif(G, 0, 2*pi)
sigma_genes <- rchisq(G, 4);
cell_times_sim <- sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE);
cycle_data <- sim_sinusoidal_cycle(G, amp_genes, phi_genes, sigma_genes, cell_times_sim);
celltime_levels <- 100;
system.time(out <- cell_ordering_class(cycle_data, celltime_levels = 100, num_iter=100))
sessionInfo()
library(devtools)
install_github('kkdey/tmcmcR')
library(tmcmcR)
library(mcmc)
d=50;  ##  dimension of the simulated variable
L=30; ###   the number of replications we use for finding KS statistic
nsamples <- 5000;
Mult_Mattingly=array(0,c(2,L,nsamples,d));
mu_target=rep(0,d);
Sigma_target = 0.01*diag(1/(1:(d))*d);
L=30; ###   the number of replications we use for finding KS statistic
Mult_Mattingly=array(0,c(2,L,nsamples,d));
Mattingly_matrix <- 100*(diag(1-0.7,d)+0.7*rep(1,d)%*%t(rep(1,d)));
library(mvtnorm)
pdf = function(x)
{
return (dmvnorm(x,mu_target,Sigma_target,log=TRUE)-t(x)%*%Mattingly_matrix%*%x)
}
base=rnorm(d,0,1);
tmcmcR:::tmcmc_metrop(pdf,base=base, scale=1,nsamples=5000,burn_in = NULL)$chain
library(Rcpp)
tmcmcR:::tmcmc_metrop(pdf,base=base, scale=1,nsamples=5000,burn_in = NULL)$chain
library(tmcmcR2)
tmcmcR2:::tmcmc_metrop(pdf,base=base, scale=1,nsamples=5000,burn_in = NULL)$chain
install_github('kkdey/tmcmcR')
tmcmcR:::tmcmc_metrop(pdf,base=base, scale=1,nsamples=5000,burn_in = NULL)$chain
install_github('kkdey/tmcmcR2')
library(tmcmcR2)
tmcmcR2:::tmcmc_metrop(pdf,base=base, scale=1,nsamples=5000,burn_in = NULL)$chain
sessionInfo()
version
library(devtools)
install_github('kkdey/maptpx')
install_github('taddylab/maptpx')
install_github('taddylab/maptpx')
library(devtools)
install_github('taddylab/maptpx')
library(devtools)
install_github('taddylab/maptpx')
library(devtools)
install_github('taddylab/maptpx')
library(cellcycleR)
G <- 20;
num_cells <- 300;
amp_genes <- rep(10, G);
phi_genes <- runif(G, 0, 2*pi)
sigma_genes <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- sim_sinusoidal_cycle(G, amp_genes, phi_genes, sigma_genes, cell_times_sim);
plot(cycle_data[,1], type="l")
library(wavethresh)
data2=cycle_data[1:(2^8),1]
plot(data2)
wd1 <- wd(data2, filter.number = 1, family="DaubExPhase")
wr1 <- wr(wd1)
plot(wr1, type="l")
wd1$D
length(which(wd1$D > 0)) / length(wd1$D)
95.70-16.97
getwd()
mclapply()
mclapply.hack()
install_github('kkdey/tmcmcR')
library(devtools)
install_github('kkdey/tmcmcR')
library(tmcmcR)
mclapply.hack()
rmc3()
tmcmcR:::mclapply.hack(1:4, function(x) return(x^2))
library(parallel)
tmcmcR:::mclapply.hack(1:4, function(x) return(x^2))
parallel:::mclapply(1:4, function(x) return(x^2))
parallel:::mclapply.hack(1:4, function(x) return(x^2))
tmcmcR:::mclapply.hack(1:4, function(x) return(x^2))
detectCores()
library(parallel)
library(parallel)
detectCores()
install.packages("Rmosek", type="source", repos="http://download.mosek.com/R/7")
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch",
repos="http://download.mosek.com/R/7")
install.packages("Rmosek", repos="http://R-Forge.R-project.org", type="source", INSTALL_opts="--no-multiarch", configure.vars="PKG_MOSEKHOME=/Users/kushal/Documents/mosek/7/tools/platform/osx64x86 PKG_MOSEKLIB=mosek")
install.packages("Rmosek", repos="http://R-Forge.R-project.org", type="source", INSTALL_opts="--no-multiarch", configure.vars="PKG_MOSEKHOME=/Users/kushal/Documents/mosek/7/tools/platform/osx64x86 PKG_MOSEKLIB=mosek64")
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[1,])
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
amp_genes1 <- rep(10, G);
phi_genes1 <- rep(c(2,5), each=G/2);
sigma_genes1 <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- t(sim_sinusoidal_cycle(G, amp_genes1, phi_genes1, sigma_genes1, cell_times_sim));
plot(cycle_data[1,])
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cycle_data_reorder <- cycle_data[,sample_reorder];
plot(cycle_data_reorder[1,])
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[1,])
plot(mu.est.true, type = "l")
mu.est.true <- system.time(smooth.spline(cell_times_sim, cycle_data[1,]))
mu.est.reorder <- smooth.spline(cell_times_sim, cycle_data_reorder[1,])
plot(mu.est.reorder, type = "l")
disp_reorder <- sum((cycle_data_reorder[1,] - mu.est.reorder)^2)
mu.est.reorder
plot(mu.est.reorder$y, type = "l")
disp_reorder <- sum((cycle_data_reorder[1,] - mu.est.reorder$y)^2)
disp_reorder
disp_true <- sum((cycle_data[1,] - mu.est.true$y)^2)
mu.est.true$y
mu.est.true
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[1,])
disp_true <- sum((cycle_data[1,] - mu.est.true$y)^2)
disp_true
disp.true <- array(0,G);
smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[g,])))
out <- sum((cycle_data[g,] - mu.est.true)^2)
return(out)
}))
disp.true <- array(0,G);
smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[g,])
out <- sum((cycle_data[g,] - mu.est.true)^2)
return(out)
}))
disp.true <- array(0,G);
smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[g,])
out <- sum((cycle_data[g,] - mu.est.true$y)^2)
return(out)
}))
smash_disp_true
library(parallel)
outdisp_set <- unlist(mclapply(1:20, function(l)
{
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cycle_data_reorder <- cycle_data[,sample_reorder];
disp <- mean(sapply(1:G, function(g)
{
mu.est.reord <- smooth.spline(cell_times_sim, cycle_data_reorder[g,])
out <- sum((cycle_data_reorder[g,] - mu.est.reord$y)^2)
return(out)
}))
return(disp)
}, mc.cores=detectCores()))
outdisp_set
outdisp_set <- system.time(unlist(mclapply(1:20, function(l)
{
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cycle_data_reorder <- cycle_data[,sample_reorder];
disp <- mean(sapply(1:G, function(g)
{
mu.est.reord <- smooth.spline(cell_times_sim, cycle_data_reorder[g,])
out <- sum((cycle_data_reorder[g,] - mu.est.reord$y)^2)
return(out)
}))
return(disp)
}, mc.cores=detectCores())))
outdisp_set
mu.est.true <- scatter.smooth(cell_times_sim, cycle_data[1,])
plot(mu.est.true, type = "l")
mu.est.true
mu.est.true <- loess.smooth(cell_times_sim, cycle_data[1,])
plot(mu.est.true, type = "l")
mu.est.reorder <- loess.smooth(cell_times_sim, cycle_data_reorder[1,])
plot(mu.est.reorder, type = "l")
cycle_data_reorder[1,]
plot(cycle_data_reorder[1,])
disp_reorder <- sum((cycle_data_reorder[1,] - mu.est.reorder$y)^2)
disp_true <- sum((cycle_data[1,] - mu.est.true$y)^2)
mu.est.reorder
cycle_data[1,]
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
amp_genes1 <- rep(10, G);
phi_genes1 <- rep(c(2,5), each=G/2);
sigma_genes1 <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- t(sim_sinusoidal_cycle(G, amp_genes1, phi_genes1, sigma_genes1, cell_times_sim));
plot(cycle_data[1,])
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cycle_data_reorder <- cycle_data[,sample_reorder];
plot(cycle_data_reorder[1,])
mu.est.true <- loess.smooth(cell_times_sim, cycle_data[1,])
plot(mu.est.true, type = "l")
mu.est.true
mu.est.true <- smoothScatter(cell_times_sim, cycle_data[1,])
plot(mu.est.true, type = "l")
mu.est.true <- smoothScatter(cell_times_sim, cycle_data[1,])
mu.est.true
mu.est.true <- loess(cycle_data[1,] \sim cell_times_sim)
mu.est.true <- loess(cycle_data[1,] ~ cell_times_sim)
mu.est.true
mu.est.true$fitted
plot(mu.est.true$fitted, type = "l")
mu.est.reorder <- loess(cycle_data_reorder[1,] ~ cell_times_sim)
plot(mu.est.reorder$fitted, type = "l")
mu.est.true <- wr(threshold(wd(cycle_data[1,]), type="soft"));
plot(mu.est.true, type = "l")
mu.est.reorder <- wr(threshold(wd(cycle_data_reorder[1,]), type="soft"));
plot(mu.est.reorder, type = "l")
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(57,80,2.5))
library(mosaic)
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(57,80,2.5))
trump.data.frame <- get(load("trump.data.rda"));
setwd("~/Documents/STAT234_lectures/Day1")
trump.data.frame <- get(load("trump.data.rda"));
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(57,80,2.5))
trump.data.frame$retweets
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)")
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(0,30000,1000))
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(0,30000,5000))
histogram(~ retweets, data=trump.data.frame, type="count", xlab="Height (inches)", breaks=seq(0,30000,1000))
histogram(~ retweets | tweet_months, data=trump.data.frame, type="count", xlab="Height (inches)", layout=c(1,2), breaks=seq(0,30000,1000))
histogram(~ retweets | tweet_month, data=trump.data.frame, type="count", xlab="Height (inches)", layout=c(1,2), breaks=seq(0,30000,1000))
histogram(~ retweets | tweet_month, data=trump.data.frame, type="count", xlab="Height (inches)", layout=c(3,3), breaks=seq(0,30000,1000))
rm(tweet_months)
histogram(~ retweets | tweet_month, data=surveyData, type="percent", breaks=seq(0,30000,1000), layout=c(3,3))
histogram(~ retweets | tweet_month, data=trump.data.frame, type="percent", breaks=seq(0,30000,1000), layout=c(3,3))
histogram(~ log(retweets) | tweet_month, data=trump.data.frame, type="percent", breaks=seq(0,30000,1000), layout=c(3,3))
histogram(~ log(retweets) | tweet_month, data=trump.data.frame, type="percent", layout=c(3,3))
histogram(~ log(retweets), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
with(trump.data.frame, stem(retweets))
retweets
trump.data.frame$retweets
with(trump.data.frame, stem(retweets))
stem(c(1,2,3))
max(trump.data.frame$retweets)
min(trump.data.frame$retweets)
stem(trump.data.frame$retweets)
stem(c(1,1.1, 1.8,2.5,2.4,4.6))
stem(c(201,200.1, 101.8,240.5,139.4,147.6))
stem(c(201,200.1, 101.8,240.5,139.4,147.6,1.4))
stem(c(201,200.1, 101.8,246.5,139.4,147.6,1.4))
stem(c(201,200.1, 101.8,243.5,139.4,147.6,1.4))
stem(c(201,200.1, 101.8,243.5,139.4,167.6,1.4))
stem(trump.data.frame$retweets)
trump.data.frame$retweets
sort(trump.data.frame$retweets)
stem(trump.data.frame$retweets)
sort(trump.data.frame$retweets)
stem(trump.data.frame$retweets)
stem(trump.data.frame$favorites)
stem(trump.data.frame$trump_day)
stem(trump.data.frame$tweet_day)
stem(trump.data.frame$tweet_day)
stem(as.numeric(trump.data.frame$tweet_day))
stem(trump.data.frame$favorites)
histogram(~ log(retweets), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(haircut, na.rm=TRUE), lwd=2)
curve(dnorm(x, mhair, shair), lwd=4, lty=2, add=TRUE)
lines(density(trump.data.frame$retweets, na.rm=TRUE), lwd=2)
histogram(~ log(retweets), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(trump.data.frame$retweets, na.rm=TRUE), lwd=2)
lines(density(log(retweets), na.rm=TRUE), lwd=2)
attach(trump.data.frame)
lines(density(log(retweets), na.rm=TRUE), lwd=2)
plot(density(log(retweets), na.rm=TRUE), lwd=2)
histogram(~ log(retweets), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(retweets), na.rm=TRUE), lwd=2)
curve(dnorm(x, trump.data.frame$retweets), lwd=4, lty=2, add=TRUE)
curve(dnorm(trump.data.frame$retweets), lwd=4, lty=2, add=TRUE)
lines(density(log(retweets), na.rm=TRUE), lwd=2)
log(retweets)
lines(density(log(retweets+1), na.rm=TRUE), lwd=2)
histogram(~ log(retweets), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(retweets+1), na.rm=TRUE), lwd=2, add=TRUE)
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
plot(density(log(retweets+1), na.rm=TRUE), lwd=2, add=TRUE)
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
plot(density(log(retweets+1)), lwd=2, add=TRUE)
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
detach(trump.data.frame)
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(trump.data.frame$retweets+1)))
curve(function(x) return (dnorm(x, trump.data.frame$retweets)), lwd=4, lty=2, add=TRUE)
curve(dnorm(x, mean(trump.data.frame$retweets),
sd(trump.data.frame$retweets)), lwd=4, lty=2, add=TRUE)
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mean(log(trump.data.frame$retweets+1)),
sd(log(trump.data.frame$retweets+1)), lwd=4, lty=2, add=TRUE))
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mean(log(trump.data.frame$retweets+1)),
sd(log(trump.data.frame$retweets+1))), lwd=4, lty=2, add=TRUE)
par(mfrow=c(1,2))
histogram(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mean(log(trump.data.frame$retweets+1)),
sd(log(trump.data.frame$retweets+1))), lwd=4, lty=2, add=TRUE)
par(mfrow=c(1,1,))
par(mfrow=c(1,1))
hist(~ log(retweets+1), data=trump.data.frame, type="percent", xlab="Log of number of retweets")
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mean(log(trump.data.frame$retweets+1)),
sd(log(trump.data.frame$retweets+1))), lwd=4, lty=2, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets))
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
mtweets <- mean(trump.data.frame$retweets)
stweets <- sd(trump.data.frame$retweets)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets))
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
mtweets <- mean(log(trump.data.frame$retweets+1))
stweets <- sd(log(trump.data.frame$retweets+1))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets))
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), col="blue")
lines(density(log(trump.data.frame$retweets+1)))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), col="lightgray")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, add=TRUE)
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2)
mtweets
stweets
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), col="lightgray")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), freq=FALSE, col="lightgray")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), freq=FALSE, col="lightgray")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE), ylim=c(0,0.5))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), freq=FALSE, col="lightgray")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE), ylim=c(0,0.7))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), freq=FALSE, col="lightgray", ylim=c(0,0.7))
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), freq=FALSE, col="lightgray", ylim=c(0,0.5))
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets),
breaks=seq(mtweets-3*stweets, mtweets+3*stweets, 0.5),
freq=FALSE, col="lightgray", ylim=c(0,0.5))
seq(mtweets-3*stweets, mtweets+3*stweets, 0.5)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets),
breaks=seq(mtweets-3*stweets, mtweets+3*stweets, 0.5),
freq=FALSE, col="lightgray", ylim=c(0,0.5))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets),
breaks=seq(min(log(trump.data.frame$retweets+1)),
max(log(trump.data.frame$retweets+1)),
0.5),
freq=FALSE, col="lightgray", ylim=c(0,0.5))
seq(min(log(trump.data.frame$retweets+1)),
max(log(trump.data.frame$retweets+1)),
0.5)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets),
breaks=seq(mtweets-3*stweets,
mtweets+3*stweets,
0.5),
freq=FALSE, col="lightgray", ylim=c(0,0.5))
min(log(trump.data.frame$retweets+1))
seq(mtweets-3*stweets,
+                 mtweets+3*stweets,
+                 0.5)
max(log(trump.data.frame$retweets+1))
seq(min(log(trump.data.frame$retweets+1)),
max(log(trump.data.frame$retweets+1)),
0.5)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.5))
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=10,
freq=FALSE, col="lightgray", ylim=c(0,0.5))
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=10,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (10 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (10 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (10 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, col="lightgray", ylim=c(0,2), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (100 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=density, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
probability=!freq, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
probability=!freq, freq=FALSE, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, probabilit=!freq, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, probability=!freq, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=1000,
freq=FALSE, col="lightgray", ylim=c(0,1), main="Histogram (1000 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=10,
freq=FALSE, col="lightgray", ylim=c(0,1), main="Histogram (10 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=10,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (10 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.5), main="Histogram (100 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.8), main="Histogram (100 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
hist(log(trump.data.frame$retweets+1), xlab="Log of number of retweets",
xlim=c(mtweets-3*stweets,mtweets+3*stweets), breaks=100,
freq=FALSE, col="lightgray", ylim=c(0,0.55), main="Histogram (100 bins)")
lines(density(log(trump.data.frame$retweets+1), na.rm=TRUE))
curve(dnorm(x, mtweets, stweets), lwd=4, lty=2, from = mtweets-3*stweets, to = mtweets+3*stweets, add=TRUE)
sum(log(trump.data.frame$retweets+1) >= mtweets + stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
sum(log(trump.data.frame$retweets+1) >= mtweets - stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
sum(log(trump.data.frame$retweets+1) <= mtweets - stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
1 - pnorm(2)
sum(log(trump.data.frame$retweets+1) >= mtweets + 2*stweets, na.rm=TRUE) / n
sum(log(trump.data.frame$retweets+1) >= mtweets + 2*stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
1 - pnorm(2)
sum(log(trump.data.frame$retweets+1) >= mtweets + 2*stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
pnorm(-2)
sum(log(trump.data.frame$retweets+1) <= mtweets - 2*stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
sum(log(trump.data.frame$retweets+1) >= mtweets + stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
sum(log(trump.data.frame$retweets+1) <= mtweets - stweets, na.rm=TRUE) / dim(trump.data.frame)[1]
mtweets+stweets
1 - pnorm(mtweets + stweets, m=mtweets, s=stweets)
pnorm(mtweets - stweets, m=mtweets, s=stweets)
pnorm(-1, m=0, s=1)
pnorm(-1)  # the default is mean=0, sd=1 ("standard" normal)
pnorm(1)
1 - pnorm(1)
