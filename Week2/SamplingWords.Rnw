%<<echo=FALSE>>=
%OLD <- options(width=90)
%@
%<<echo=FALSE>>=
%options(OLD) 
%@

\documentclass{beamer}% regular slides (with pauses)
%\documentclass[handout]{beamer}% handout (no pauses)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%% Change the lecture information here %%%%%%%%%%%%%%%%
\def\chapnum{Week \#2: Sampling from a Population (Sample Statistics have a Distribution)}
\title{Lecture 2: Sampling Distibution}
\author{Kushal K Dey}
\date{04.05.2016}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\usepackage{enumerate}
\usepackage{amsmath, bbm}
\usepackage[misc]{ifsym} % for the dice symbol \Cube{}
\usepackage[latin1]{inputenc}
\usepackage{hyperref}

%\usepackage{comment}
%\usepackage{pstricks}
%\usepackage{graphicx}
%\usepackage{booktabs}
%\usepackage{pgfpages}
%\pgfpagesuselayout{2 on 1}[a4paper,border shrink=3mm]
%\pgfpagesuselayout{4 on 1}[a4paper,landscape,border shrink=3mm

\usepackage{setspace}
\ifdefined\knitrout
  \renewenvironment{knitrout}{\begin{spacing}{0.75}\begin{tiny}}{\end{tiny}\end{spacing}}
\else
\fi

%%%%%%%%%%%%%%% Defined Shortcuts (macros) %%%%%%%%%%%%%
% parameters and statistics
\newcommand{\xbar}{\overline{x}}
\newcommand{\Xbar}{\overline{X}}
\newcommand{\ybar}{\overline{y}}
\newcommand{\Ybar}{\overline{Y}}
\newcommand{\dbar}{\overline{d}}
\newcommand{\Dbar}{\overline{D}}
\newcommand{\zbar}{\overline{z}}
\newcommand{\Zbar}{\overline{Z}}
\newcommand{\ehat}{\widehat{\epsilon}}
\newcommand{\yhat}{\widehat{y}}
\newcommand{\Yhat}{\widehat{Y}}
\newcommand{\betaa}{{\beta_0}}
\newcommand{\betab}{{\beta_1}}
\newcommand{\betac}{{\beta_2}}
\newcommand{\betad}{{\beta_3}}
\newcommand{\BETA}{{\boldsymbol\beta}}
\newcommand{\betahata}{\widehat{\beta_0}}
\newcommand{\betahatb}{\widehat{\beta_1}}
\newcommand{\betahatc}{\widehat{\beta_2}}
\newcommand{\betahatd}{\widehat{\beta_3}}
\newcommand{\bhat}{\widehat{b}}
\newcommand{\btilde}{\widetilde{b}}
\newcommand{\ahat}{\widehat{a}}
\newcommand{\atilde}{\widetilde{a}}
\newcommand{\rss}{\mathit{SSE}}
\newcommand{\sigmahat}{\widehat{\sigma}}
\newcommand{\betahat}{\widehat{\beta}}
\newcommand{\thetahat}{\widehat{\theta}}
\newcommand{\phat}{\widehat{p}}
\newcommand{\pihat}{\widehat{\pi}}
\newcommand{\muhat}{\widehat{\mu}}
% real numbers and integers
\newcommand{\reals}{\mathbbm{R}}
\newcommand{\integers}{\mathbbm{N}}
%distributions
\newcommand{\normal}{\textsf{Norm}}
\newcommand{\Bin}{\textsf{Binom}}
\newcommand{\Uni}{\textsf{Unif}}
\newcommand{\Poisson}{\textsf{Pois}}
\newcommand{\Exp}{\textsf{Exp}}
\newcommand{\Beta}{\textsf{Beta}}
\newcommand{\iid}{\stackrel{\mathrm{iid}}{\sim}}
% probability and expected value
\newcommand{\rv}{r.v.\ }
\newcommand{\prob}{{\rm P}}
\newcommand{\mean}{\mathrm{E}}
\newcommand{\var}{\mathrm{Var}}
\newcommand{\Var}{\mathrm{Var}}
\newcommand{\cov}{\mathrm{Cov}}
\newcommand{\corr}{\mathop{\mathrm{Corr}}}
% measures of spread
\newcommand{\IQR}{\textit{IQR}}
\newcommand{\SAD}{\textit{SAD}}
\newcommand{\MAD}{\textit{MAD}}
\newcommand{\SSD}{\textit{SSD}}
\newcommand{\MSD}{\textit{MSD}}
\newcommand{\RMSD}{\textit{RMSD}}
\newcommand{\MSE}{\textit{MSE}}
\newcommand{\MSR}{\textit{MSR}}
% formatting code and such
\providecommand{\variable}[1]{}
\renewcommand{\variable}[1]{{\color{green!50!black}\texttt{#1}}}
\providecommand{\function}[1]{}
\renewcommand{\function}[1]{{\color{purple!75!blue}\texttt{\StrSubstitute{#1}{()}{}()}}}
\providecommand{\option}[1]{}
\renewcommand{\option}[1]{{\color{brown!80!black}\texttt{#1}}}
\providecommand{\pkg}[1]{}
\renewcommand{\pkg}[1]{{\color{red!80!black}\texttt{#1}}}
\providecommand{\code}[1]{}
\renewcommand{\code}[1]{{\color{blue!80!black}\texttt{#1}}}

%%%%%%%%%
% Changed by Kushal K Dey, University of Chicago
%\providecommand{\file}[1]{}
%\renewcommand{\file}[1]{{\tt #1}}
\providecommand{\file}[1]{}
\renewcommand{\file}[1]{{\color{orange!80!black}\texttt{#1}}}
%\providecommand{\dataframe}[1]{}
%\renewcommand{\dataframe}[1]{{\color{blue!80!black}\texttt{#1}}}
\providecommand{\dataframe}[1]{}
\renewcommand{\dataframe}[1]{{\color{cyan!80!black}\texttt{#1}}}
%%%%%%%%%

% other
\def\Sum{\sum\nolimits}
\def\b#1{\fboxsep=0pt\colorbox{black}{\color{white}\Cube{#1}}}
\def\w#1{\Cube{#1}}
%%%%%%%%%%%% End of shortcuts (macros) ##############

%%%%%%%%% One way to hide answers until you want to show them %%%%%%%%%
\def\Hide#1#2{\ul{~~~\onslide<#1>{\alert{#2}}~~~}}
\def\hide#1#2{\ul{~~\onslide<#1>{\alert{#2}}~~}}
\def\hid#1#2{\onslide<#1>{\alert{#2}}}
% Choose the color of answers here too
\setbeamercolor{alerted text}{fg=darkgray} 
%\setbeamercolor{alerted text}{fg=black} 

%------Centered Page Number Setup ------
\defbeamertemplate{footline}{centered page number}
{%
  \hspace*{\fill}%
  %\usebeamercolor[fg]{page number in head/foot}%
  %\usebeamerfont{page number in head/foot}%
  \tiny \chapnum: Page \insertframenumber\, of \inserttotalframenumber%
  \hspace*{\fill}\vskip2pt%
}
%\setbeamertemplate{footline}{\hfill\insertframenumber/\inserttotalframenumber}
\setbeamertemplate{footline}[centered page number]
%--------------------------------

%\usetheme{Copenhagen}
\setbeamertemplate{navigation symbols}{}
\usepackage[english]{babel}
\def\ul{\underline}
\linespread{1.1}
% or whatever



%\parskip=0pt

\begin{document}%large

%<<setup, include=FALSE, cache=FALSE>>=
%options(replace.assign=TRUE,width=90, digits=4)
%opts_chunk$set(fig.path='figure/graphics-', cache.path='cache/graphics-', fig.align='center', fig.width=8, fig.height=5.5, fig.show='as.is', out.width='0.9\\linewidth', cache=FALSE, par=TRUE, size = 'tiny', tidy=TRUE, cache.extra=rand_seed)
%knit_hooks$set(par=function(before, options, envir){
%if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1),cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
%}, document = function(x) {
%  gsub('\\\\(begin|end)\\{kframe\\}', '', x)
%}, crop=hook_pdfcrop)
%@
%<<setup2, include=FALSE, cache=FALSE>>=
%knit_theme$set("print")
%@

<<setup, include=FALSE, cache=FALSE>>=
require(xtable)
# require(mosaic)
require(Hmisc)
require(fastR)
require(Lock5Data)
options(format.R.blank=FALSE) 
options(width=60)
options(continue=" ")
options(replace.assign=TRUE)
options(scipen=8, digits=4)
opts_chunk$set(
  fig.path='figure/graphics-', 
  cache.path='cache/graphics-', 
  dev="pdf",
  fig.align='center', 
  fig.width=8, 
  fig.height=5.5, 
  fig.pos='H', 
  fig.show='asis', 
  out.width='0.99\\linewidth', 
  par=TRUE, 
  size = 'small', 
  tidy=FALSE,
  prompt=FALSE,
  comment=NA
)
# Tighten the spacing within R output from knitr
hook1 <- function(x){ gsub("```\n*```r*\n*", "", x) }
hook2 <- function(x){ gsub("```\n+```\n", "", x) }
knit_hooks$set(
  crop=hook_pdfcrop,
  document = hook1,
  par=function(before, options, envir){
    if (before) {
    ## load packages before a chunk is executed
    for (p in options$packages) library(p, character.only = TRUE)
    }
    if (before && options$fig.show!='none') par(oma=c(0,0,0,0)+0.01, mar=c(4,4,0,0)+0.01, cex=0.9, cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
  } 
)
opts_knit$set(concordance=TRUE)
# For printing code blocks in black and white
knit_theme$set("greyscale0") 

# trellis.par.set(theme=col.mosaic(bw=FALSE))
uchicago.lattice.theme=col.fastR(bw=TRUE)
uchicago.lattice.theme$box.dot$pch=20
uchicago.lattice.theme$dot.symbol$pch=20
uchicago.lattice.theme$plot.symbol$pch=20
trellis.par.set(theme=uchicago.lattice.theme, warn=FALSE)
trellis.par.set(fontsize=list(text=18,points=10))
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%% End of suggested definitions and packages %%%%%%%%%%%%

%------------------------------------------------------------------
%------------------------------------------------------------------

%%%%%%%%%% Title frame (optional) %%%%%%%%%%%%%
\begin{frame}{}
\maketitle
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%% Begin slides here %%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Game of Words \;\;}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vskip0.25cm

\includegraphics[width=10cm,keepaspectratio]{game-of-thrones.jpg}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Loading the Data \;\;}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vskip0.25cm

<<>>=
library(devtools)
install_github("kkdey/GOTnames")
library(GOTnames)
data(GOTnames)
@

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[allowframebreaks, fragile]{Sample Statistics ($\xbar$'s) have a Distribution Too\;\;}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vskip0.25cm

%par(oma=c(0,0,0,0)+0.01, mar=c(4,4,0,0)+0.01, pch=20)  

My personal sample of $n=8$ words
<<echo=FALSE>>=
mySample <- c("Eddard Stark", "Sansa Stark", "Robb Stark", "Arya Stark", "Benjen Stark",
"Catelyn Stark",  "Bran Stark",  "Jon Snow");
@
<<>>=
mySample
@
The lengths of my $n=8$ words:
<<echo=FALSE>>=
mySampleWordLen <- sapply(mySample, nchar)
mySampleWordLen
@
Average length of my sample of $n=8$ words:
<<>>=
myxbar <- mean(mySampleWordLen)
myxbar
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

My personal sample of $n=8$ words
<<>>=
mySample
@
How many of my words contain the letter "a"?
<<echo=FALSE>>=
mySample[grep("a", mySample)]
@
<<echo=FALSE>>=
length(grep("a", mySample))
@
What proportion of my words contain the letter "a"?
<<>>=
myphat <- length(grep("a", mySample)) / length(mySample)
myphat
@

%humanSampleMeans <- c(2.2,4.4,6.9,5.9,6.4,4.6,7.2,5.5,3.2,5.4,5.1,7,6.2,5.8,6.4,6.3,4.8,7.6,5.1,2.9,4.9,5.5)
<<tidy=TRUE>>=
humanSampleMeans <- c(6.9,12.4,13.4,13.7,14.6,7.8,15.5,12.1,18.9,16.3,7.1,8.2,8.1,10.1,10.6,7.7,10.3,9.6,6.7,11.1,16.1,10.2,12.0)
@
How many sample means (xbars)?
<<echo=FALSE>>=
length(humanSampleMeans)
@
<<>>=
stem(humanSampleMeans, scale=2)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<histogram-humanSampleMeans, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
histogram(~ humanSampleMeans)
@
\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<histogram-humanSampleMeans-2, echo=FALSE, fig.height=5, fig.width=8, out.width='0.79\\linewidth'>>=
histogram(~ humanSampleMeans)
@
<<>>=
mean(humanSampleMeans)
@


<<>>=
worddata <- as.data.frame(GOTnames);
@
How many words are in the Game of Thrones characters?
<<>>=
glimpse(worddata)
@
%<<echo=FALSE>>=
%attach(worddata)
%@

What is actual average length of all 100 characters in Game of Thrones?
<<>>=
mean(wordlen, data=worddata)
@
<<echo=FALSE>>=
mu <- mean(wordlen, data=worddata)
@
What symbol do we use to denote this mean?

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%

A histogram of the lengths of all 100 words.

<<histogram-humanSampleMeans-3, echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(worddata$wordlen, main="", ylab="Number of words",
     xlab="Lengths of 100 character names in GoT", col="lightgrey", cex.lab=1.5, cex.axis=1.5) 
abline(v=mu, lwd=3, lty=2)
text(mu, 50, pos=4,
     paste("Average word length = ", round(mu,2)), cex=2.5)
@


\newpage
%%%%%%%%%%%%%%%%%%%%%%%%

How does the original population of word lengths compare
with the \Sexpr{length(humanSampleMeans)} average lengths (xbars) of 8 human-chosen words?
\vskip0.25cm
<<echo=FALSE, fig.height=5, fig.width=8, out.width='0.79\\linewidth'>>=
hist(worddata$wordlen, main="", ylim=c(0,0.15), prob=TRUE, 
     col="lightgray", ylab="Density",
     xlab="Avg. Lengths of 8 randomly chosen words of 100 GoT character", cex=1.5, cex.lab=1.5, cex.axis=1.5) 
abline(v=mu, lwd=3, lty=2)
hist(humanSampleMeans, add=TRUE, prob=TRUE, density=10, angle=-45)
@
\vskip0.25cm
Our sample averages (xbars) tend to underestimate
the true average $\mu$.
This is evidence of \textbf{bias} in our estimation method.

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%

What is the actual proportion of all 100 words that contain an ``a"?
\vskip0.25cm
<<echo=FALSE>>=
p <- length(which(worddata$A.present=="Yes"))/100
@
<<>>=
p
@
\vskip0.25cm
This is a population parameter labeled $p$ (sometimes $\pi$).

\vskip0.5cm
How many of you had a sample proportion ($\phat$) \\
higher than the true value? \\
%The population parameter $p=\Sexpr{round(p,3)}$.
\vskip0.5cm
Is this evidence of \textbf{bias} in our estimation method?

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%

Now, randomly sample just 8 words from the list
\vskip0.25cm

Pick a random point in the list and start drawing next 8 characters.
\vskip0.25cm

For example, start reading from Grey Worm and go down...\\
\vskip0.25cm

These random numbers correspond to the words...\\
\verb| Grey Worm,   Anguy,   Orell,   Irri,   Craster |\\
\verb| Mirri Maz Duur, Syrio Forrel, Rakharo |
\vskip0.25cm

With word lengths...
\verb| 10  6  6  5  8 15 13  8 |
\vskip0.25cm

and average = $\xbar=8.875$\;\; and proportion with ``a" = $\phat=4/8=0.50$.
\vskip0.25cm

Oops!  My estimate is too low since 
%$\mu = \Sexpr{round(mu,2)}$\\
Did I do something wrong?  Is random sampling also biased? 


Your averages (xbars) from 8 randomly-chosen words 
<<tidy=TRUE>>=
humanRandomMeans <- c(11.1, 10.2, 11.8, 12.6, 11.5, 14.6, 11.4, 13.1, 13.2, 11.5, 12, 11.5, 14.1, 11.5, 11.2, 10.2, 10.9, 12.5, 13.3, 12.3, 12, 13, 15.1);
@
How many sample means (xbars)?
<<echo=FALSE>>=
length(humanRandomMeans)
@
<<>>=
stem(humanRandomMeans)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%

<<histogram-humanRandomMeans, fig.height=5, fig.width=8, out.width='0.79\\linewidth'>>=
histogram(~ humanRandomMeans)
@
\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

What is the mean length (xbar) ``on average" for your 
\Sexpr{length(humanRandomMeans)} samples?

What is the mean length "on average" for your samples of 8 ``random" words
vs.\ 8 ``representative" words?  
<<>>=
mean(humanRandomMeans)
mean(humanSampleMeans)
mu
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

How does the original population of word lengths compare
with the \Sexpr{length(humanRandomMeans)} average lengths
(xbars) from  $n=8$ randomly-chosen words?
<<histogram-humanRandomMeans-2, echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(worddata$wordlen, main="", ylim=c(0,0.5), prob=TRUE, 
     col="lightgray", ylab="Density",
     xlab="Lengths of 100 character names in GoT", cex=1.5, cex.axis=1.5, cex.lab=1.5) 
abline(v=mu, lwd=3, lty=2)
hist(humanRandomMeans, add=TRUE, prob=TRUE, density=10, angle=-45)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%

How do the averages from the ``representative" samples of $n=8$
compare with the random samples of n=8?
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
par(mfrow=c(2,1)) # setup for 2 graphs on 1 page: 2 rows, 1 column
# Set up the x-axis to be the same units for both plots
lim=c(min(humanSampleMeans,humanRandomMeans),max(humanSampleMeans,humanRandomMeans))
hist(humanSampleMeans, xlim=lim, main="", col="lightgrey", cex=1.5, cex.axis=1.5, cex.lab=1.5)
abline(v=mu, lwd=2, lty=2)
hist(humanRandomMeans, xlim=lim, main="", col="lightgrey", cex=1.5, cex.axis=1.5, cex.lab=1.5)
abline(v=mu, lwd=2, lty=2)
par(mfrow=c(1,1)) # return setup for 1 graph per page
@

\newpage
%%%%%%%%%%%%%%%%%%

Let's let R randomly sample 8 words from the list of character names in GoT and record their 
average length (xbar). 
\vskip0.25cm
Repeat this 500 times. 
\vskip0.25cm
Will all of the 500 sample averages be the same?

\newpage
%%%%%%%%%%%%%%%%%%%%%%

To get started, look at a couple of samples and their means
<<echo=FALSE>>=
set.seed(123456)
attach(worddata)
@
<<>>=
sample1 <- sample(1:100,8);   sample1
x[sample1]
wordlen[sample1]
mean(wordlen[sample1])
@

\newpage
%%%%%%%%%%%%%%%%

<<>>=
sample2 <- sample(1:100,8);   sample2
x[sample2]
wordlen[sample2]
mean(wordlen[sample2])
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%

<<>>=
mean(wordlen[sample1])
mean(wordlen[sample2])
mu
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Now, let's repeat the random sampling a few times
<<echo=FALSE>>=
set.seed(12345)
@
<<>>=
replicate(10, wordlen[sample(1:100,8)] )
@
<<echo=FALSE>>=
set.seed(12345)
@
<<>>=
replicate(10, mean(wordlen[sample(1:100,8)]) )
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Let's repeat the random sampling 500 times
<<echo=FALSE>>=
set.seed(12345)
@
<<>>=
randomSampleMeans = replicate(500, mean(wordlen[sample(1:100,8)]) )
sort(randomSampleMeans[1:20])
mu
plot(randomSampleMeans - mu)
abline(h=0)
@

\newpage
%%%%%%%%%%%%%%%%%%%

What is the average lenght (xbar) "on average" for many, many ($M=500$)
samples each with $n=8$ randomly chosen words?  
<<>>=
mean(randomSampleMeans)
@
If this "mean of the averages" is close to the true mean
we say that the statistic ($\xbar$) is an
\textbf{unbiased} statistic (estimator) for the parameter ($\mu$).
<<>>=
mu
@


Histogram of the average lengths ($n=8$)
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(randomSampleMeans, main="", 
     ylab="# samples of 8 randomly chosen words (N=500 samples)",
     xlab="Avg. Lengths of 100 character names in GoT", col="lightgrey", cex=1.5, cex.lab=1.5, cex.axis=1.5) 
abline(v=mu, lwd=3, lty=2)
text(mean(wordlen), 120, pos=4,
     paste("True mean word length = ", round(mu,2)))
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%

How does the original population of word lengths compare
with the $M=500$ avreage lengths (xbars) of $n=8$ randomly chosen words?
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(wordlen, main="", ylim=c(0,150), ylab="Number of words",
     col="lightgray", 
     xlab="Lengths of 100 character names in GoT", cex=1.5, cex.lab=1.5, cex.axis=1.5) 
abline(v=mu, lwd=3, lty=2)
hist(randomSampleMeans, add=TRUE, density=10, angle=-45)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%

Can the distribution of xbars be well-approximated by a normal density?
Standardize the averages
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
z <- (randomSampleMeans - mean(randomSampleMeans)) / sd(randomSampleMeans)
qqnorm(z, main="")
#qqline(z)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%

Let's randomly sample $n=15$ words instead of 8

Let's repeat the random sampling 500 times
<<echo=FALSE>>=
set.seed(12345)
@
<<>>=
randomSampleMeans.15 = replicate(500, mean(wordlen[sample(1:100,15)]) )
sort(randomSampleMeans.15[1:20])
mu
plot(randomSampleMeans.15 - mu)
abline(h=0)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%

What is the mean length "on average" for many, many ($M=500$)
samples of $n=15$ randomly chosen words?  
<<>>=
mean(randomSampleMeans.15)
@
If this "mean of the averages" is close to the true mean
we say that the statistic ($\xbar$) is an
\textbf{unbiased} statistic (estimator) for the parameter ($\mu$).
<<>>=
mu
@

\newpage
%%%%%%%%%%%%%%%%%

Histogram of the average lengths ($n=15$)
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(randomSampleMeans.15, main="", 
     ylab="# samples of 15 randomly chosen words (N=500 samples)",
     xlab="Avg. Lengths of 15 randomly chosen words of 100 GoT characters", col="lightgrey", cex=1.5, cex.lab=1.5, cex.axis=1.5) 
abline(v=mu, lwd=3, lty=2)
text(mu, 120, pos=4,
     paste("True mean word length = ", round(mu,2)))
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%

How does the original population of word lengths compare
with the $M==500$ mean lengths of $n=15$ randomly chosen words?
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
hist(wordlen, main="", ylim=c(0,150), ylab="Number of words",
     col="lightgray", 
     xlab="Avg. Lengths of 15 randomly chosen words of 100 GoT character") 
abline(v=mu, lwd=3, lty=2)
hist(randomSampleMeans.15, add=TRUE, density=10, angle=-45)
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%

Can the distribution of xbars be well-approximated by a normal density?
Standardize the averages
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
z.15 <- (randomSampleMeans.15 - mean(randomSampleMeans.15)) / sd(randomSampleMeans.15)
par(mfrow=c(1,2))
qqnorm(z, main="")
qqline(z)
qqnorm(z.15, main="")
qqline(z.15)
par(mfrow=c(1,1))
@

\newpage
%%%%%%%%%%%%%%%%%%%%%%%

How do the means from the random samples with $15$ words compare
with the $M=500$ mean lengths of $8$ randomly chosen words?
<<echo=FALSE, fig.height=6, fig.width=9, out.width='0.79\\linewidth'>>=
xlimit <- c(min(randomSampleMeans,randomSampleMeans.15)-0.5,
            max(randomSampleMeans,randomSampleMeans.15)+0.5)
hist(randomSampleMeans, main="", xlim=xlimit, prob=TRUE, ylim=c(0,0.5),
     col="lightgray", ylab="Density",
     xlab="Avg. Lengths of 8 randomly chosen words of 100 GoT characters") 
abline(v=mu, lwd=3, lty=2)
hist(randomSampleMeans.15, add=TRUE, prob=TRUE, density=10, angle=-45)
@

\newpage
%%%%%%%%%%%%%%%%%%%%

<<>>=
favstats(randomSampleMeans)
favstats(randomSampleMeans.15)
mu
sd(wordlen, data=worddata)
@

<<echo=FALSE>>=
detach(worddata)
@

\end{frame}
\end{document}

%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
